# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import simple_pb2 as simple__pb2


class SampleServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getSystemInfo = channel.unary_unary(
        '/SampleService/getSystemInfo',
        request_serializer=simple__pb2.InfoRequest.SerializeToString,
        response_deserializer=simple__pb2.InfoResponse.FromString,
        )
    self.getFactorization = channel.unary_unary(
        '/SampleService/getFactorization',
        request_serializer=simple__pb2.InfoRequest.SerializeToString,
        response_deserializer=simple__pb2.FactorResponse.FromString,
        )


class SampleServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def getSystemInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getFactorization(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SampleServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getSystemInfo': grpc.unary_unary_rpc_method_handler(
          servicer.getSystemInfo,
          request_deserializer=simple__pb2.InfoRequest.FromString,
          response_serializer=simple__pb2.InfoResponse.SerializeToString,
      ),
      'getFactorization': grpc.unary_unary_rpc_method_handler(
          servicer.getFactorization,
          request_deserializer=simple__pb2.InfoRequest.FromString,
          response_serializer=simple__pb2.FactorResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'SampleService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
